name: CI

on:
  push:
    branches:
      - main

jobs:
  run-test:
    name: 'Run tests'
    runs-on: ubuntu-latest

    steps:
      - name: Git clone
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'
          cache: 'maven'

      - name: Get list of changed files
        run: echo "LIST_OF_CHANGED_FILES=$(git diff --name-only origin/$GITHUB_HEAD_REF $(git merge-base origin/$GITHUB_HEAD_REF origin/main) | tr '\n' ';')" >> $GITHUB_ENV

      - name: Prepare Jenkins data
        run: |
          if [ -d "${{ github.workspace }}/jenkins_data" ]; then
          cat ${{ github.workspace }}/jenkins_data/jenkins_backupa* > ${{ github.workspace }}/jenkins_backup.tar
          echo "Backup tar created."
          md5sum ${{ github.workspace }}/jenkins_backup.tar
          else
          echo "Jenkins data directory does not exist."
          exit 1
          fi

      - name: Extract Jenkins data and set permission
        run: |
          if [ -f "./jenkins_backup.tar" ]; then
            mkdir -p ./jenkins_backup/var/jenkins_home
            tar -xvf ./jenkins_backup.tar -C ./jenkins_backup
            chmod -R 777 ./jenkins_backup/var/jenkins_home
            echo "Extraction and permission setting completed."
          else
            echo "Jenkins backup tar file does not exist."
            exit 1
          fi

      - name: Docker login
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Docker start
        run: docker run --rm --detach -p 8080:8080 -v ${{ github.workspace }}/jenkins_backup/var/jenkins_home:/var/jenkins_home jenkins/jenkins:2.440.2-lts-jdk17

      - name: Wait for the Jenkins
        run: ./.github/wait-for-jenkins.sh

      - name: Maven test
        run: mvn test
        env:
          CHROME_OPTIONS: --remote-allow-origins=*;--disable-gpu;--no-sandbox;--disable-dev-shm-usage;--headless=new;--window-size=1920,1080
          APP_OPTIONS: host=localhost;port=8080;admin.username=${{ secrets.ADMIN_USERNAME }};admin.password=${{ secrets.ADMIN_PASSWORD }}
          CI_RUN: true
