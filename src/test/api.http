# Fetches the JSON representation of the Jenkins server's state
GET https://ci.jenkins.io/api/json
Accept: application/json

###

@host = http://localhost:8080

### Step 1: Get CSRF Token
GET {{host}}/crumbIssuer/api/xml
Authorization: Basic {{ token }}
Accept: application/xml

### Step 2: Trigger Jenkins Job with Parameters
POST {{host}}/job/MyJob/buildWithParameters?javaVersion=17
Authorization: Basic {{ token }}
Content-Type: application/x-www-form-urlencoded
CrumbRequestField: {{ crumbRequestField }}
Crumb: {{ crumb }}


###
# Creates a new job on the Jenkins server
POST {{host}}/createItem?name=NewJob2
Content-Type: application/xml
Authorization: Basic {{ token }}

<project>
    <actions/>
    <description>This is a more detailed description for the Jenkins job. It provides information about the purpose of the job, the tasks it performs, and any other relevant details.</description>
    <keepDependencies>false</keepDependencies>
    <properties/>
    <scm class="hudson.scm.NullSCM"/>
    <canRoam>true</canRoam>
    <disabled>false</disabled>
    <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
    <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
    <triggers/>
    <concurrentBuild>false</concurrentBuild>
    <builders/>
    <publishers/>
    <buildWrappers/>
</project>

###

POST {{host}}/job/DeleteGitRepo/doRename?newName=NewJobName
Accept: application/json
Authorization: Basic {{ token }}

###

POST {{host}}/job/NewJob2/doDelete
Content-Type: application/json
Accept: application/json
Authorization: Basic {{ token }}

###

POST {{host}}/view/NewView/doDelete
Content-Type: application/json
Accept: application/json
Authorization: Basic {{ token }}

###
# Creates a new view on the Jenkins server
POST {{host}}/createView?name=MyView
Content-Type: application/xml
Authorization: Basic {{ token }}

<listView>
    <name>MyView</name>
    <filterExecutors>false</filterExecutors>
    <filterQueue>false</filterQueue>
    <properties class="hudson.model.View$PropertyList"/>
    <jobNames>
        <comparator class="hudson.util.CaseInsensitiveComparator"/>
    </jobNames>
    <jobFilters/>
    <columns>
        <hudson.views.StatusColumn/>
        <hudson.views.WeatherColumn/>
        <hudson.views.JobColumn/>
        <hudson.views.LastSuccessColumn/>
        <hudson.views.LastFailureColumn/>
        <hudson.views.LastDurationColumn/>
        <hudson.views.BuildButtonColumn/>
    </columns>
    <recurse>false</recurse>
</listView>

###
# Adds the job to the view on the Jenkins server
POST {{host}}/view/MyView/addJobToView?name=MyJob
Content-Type: application/xml
Authorization: Basic {{ token }}

###

POST {{host}}/view/MyView/config.xml
Authorization: Basic {{ token }}

###
# Fetch the current configuration of the view
GET {{host}}/view/MyView/config.xml
Authorization: Basic {{ token }}
Accept: application/xml
Output: config.xml

###

# Post the updated configuration back to the server
# The updated configuration should be in the file 'updated_config.xml'
# This file should be identical to 'config.xml', but with the updated description
POST {{host}}/view/MyView/config.xml
Authorization: Basic {{ token }}
Content-Type: application/xml

<hudson.model.ListView>
    <name>MyView</name>
    <description>This view contains all jobs related to the 'JenkinsQA' project. It includes both build and test jobs. The view is updated automatically whenever a new job is added to the 'JenkinsQA' project.</description>
    <filterExecutors>false</filterExecutors>
    <filterQueue>false</filterQueue>
    <properties class="hudson.model.View$PropertyList"/>
    <jobNames>
        <comparator class="hudson.util.CaseInsensitiveComparator"/>
        <string>MyJob</string>
        <string>NewJob3</string>
    </jobNames>
    <jobFilters/>
    <columns>
        <hudson.views.StatusColumn/>
        <hudson.views.WeatherColumn/>
        <hudson.views.JobColumn/>
        <hudson.views.LastSuccessColumn/>
        <hudson.views.LastFailureColumn/>
        <hudson.views.LastDurationColumn/>
        <hudson.views.BuildButtonColumn/>
    </columns>
    <recurse>false</recurse>
</hudson.model.ListView>

###

POST {{host}}/job/MyJob/config.xml
Authorization: Basic {{ token }}
Accept: application/xml

<scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
        <hudson.plugins.git.UserRemoteConfig>
            <url>https://github.com/WeraStremedlowska/JenkinsQA.git</url>
        </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
        <hudson.plugins.git.BranchSpec>
            <name>*/main</name>
        </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
</scm>
###

POST {{host}}/job/MyJob/config.xml
Authorization: Basic {{ token }}
Content-Type: application/xml

<project>
    <actions/>
    <keepDependencies>false</keepDependencies>
    <properties/>
    <scm class="hudson.scm.NullSCM"/>
    <canRoam>true</canRoam>
    <disabled>false</disabled>
    <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
    <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
    <triggers/>
    <concurrentBuild>false</concurrentBuild>
    <builders>
        <hudson.tasks.Shell>
            <command>java -version</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
            <command>ls -la</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
            <command>pwd</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
            <command>echo "The current working directory is: $(pwd)"</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
            <command>cd /var/jenkins_home/workspace/MyJob</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
            <command>rm -rf .gitignore .gitattributes .github</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
            <command>curl https://ci.jenkins.io/api/json</command>
        </hudson.tasks.Shell>
    </builders>
    <publishers/>
    <buildWrappers/>
</project>

###

###
# Triggers a build for the job on the Jenkins server
POST {{host}}/job/MyJob/build
Authorization: Basic {{ token }}

###

GET {{host}}/job/MyJob/lastBuild/api/json
Jenkins-Crumb: {{ crumb }}
Accept: application/json

###

GET {{host}}/job/DeleteGitRepo/lastBuild/consoleText
Authorization: Basic {{ token }}

###

POST {{host}}/job/MyJob/lastBuild/doDelete
Authorization: Basic {{ token }}

###
# Fetches the JSON representation of the first 10 jobs and views on the Jenkins server
GET {{host}}/api/json?tree=jobs[name],views[name,jobs[name]]{0,10}
Accept: application/json
Authorization: Basic {{ token }}

###

GET {{host}}/api/json?tree=jobs[name,description,lastCompletedBuild[result],lastBuild[duration],nextBuildNumber]
Accept: application/json
Authorization: Basic {{ token }}

###

GET {{host}}/job/MyJob/api/json?tree=lastSuccessfulBuild[timestamp],lastFailedBuild[timestamp]
Authorization: Basic {{ token }}

###

GET {{host}}/view/MyView/job/NewJob2/api/json?tree=lastBuild[result],name
Authorization: Basic {{ token }}

###

POST {{host}}/createItem?name=DeleteGitRepo
Authorization: Basic {{ token }}
Content-Type: application/xml

<project>
    <actions/>
    <description>Delete Git repository</description>
    <keepDependencies>false</keepDependencies>
    <properties/>
    <scm class="hudson.scm.NullSCM"/>
    <canRoam>true</canRoam>
    <disabled>false</disabled>
    <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
    <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
    <triggers/>
    <concurrentBuild>false</concurrentBuild>
    <builders>
        <hudson.tasks.Shell>
            <command>rm -rf /var/jenkins_home/workspace/MyJob/.git</command>
        </hudson.tasks.Shell>
    </builders>
    <publishers/>
    <buildWrappers/>
</project>


