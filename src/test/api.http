# Fetches the JSON representation of the Jenkins server's state
GET https://ci.jenkins.io/api/json
Accept: application/json

###
# Creates a new job on the Jenkins server
POST http://localhost:8080/createItem?name=NewJob2
Content-Type: application/xml
Authorization: Basic {{ token }}

<project>
    <actions/>
    <description>This is a more detailed description for the Jenkins job. It provides information about the purpose of the job, the tasks it performs, and any other relevant details.</description>
    <keepDependencies>false</keepDependencies>
    <properties/>
    <scm class="hudson.scm.NullSCM"/>
    <canRoam>true</canRoam>
    <disabled>false</disabled>
    <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
    <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
    <triggers/>
    <concurrentBuild>false</concurrentBuild>
    <builders/>
    <publishers/>
    <buildWrappers/>
</project>

###

POST http://localhost:8080/job/NewJob2/doDelete
Content-Type: application/json
Accept: application/json
Authorization: Basic {{ token }}

###

POST http://localhost:8080/view/NewView/doDelete
Content-Type: application/json
Accept: application/json
Authorization: Basic {{ token }}

###
# Creates a new view on the Jenkins server
POST http://localhost:8080/createView?name=MyView
Content-Type: application/xml
Authorization: Basic {{ token }}

<listView>
    <name>MyView</name>
    <filterExecutors>false</filterExecutors>
    <filterQueue>false</filterQueue>
    <properties class="hudson.model.View$PropertyList"/>
    <jobNames>
        <comparator class="hudson.util.CaseInsensitiveComparator"/>
    </jobNames>
    <jobFilters/>
    <columns>
        <hudson.views.StatusColumn/>
        <hudson.views.WeatherColumn/>
        <hudson.views.JobColumn/>
        <hudson.views.LastSuccessColumn/>
        <hudson.views.LastFailureColumn/>
        <hudson.views.LastDurationColumn/>
        <hudson.views.BuildButtonColumn/>
    </columns>
    <recurse>false</recurse>
</listView>

###
# Adds the job to the view on the Jenkins server
POST http://localhost:8080/view/MyView/addJobToView?name=MyJob
Content-Type: application/xml
Authorization: Basic {{ token }}

###
# Triggers a build for the job on the Jenkins server
POST http://localhost:8080/job/NewJob2/build
Authorization: Basic {{ token }}

###

POST http://localhost:8080/view/MyView/config.xml
Authorization: Basic {{ token }}

###
# Fetch the current configuration of the view
GET http://localhost:8080/view/MyView/config.xml
Authorization: Basic {{ token }}
Accept: application/xml
Output: config.xml

###

# Post the updated configuration back to the server
# The updated configuration should be in the file 'updated_config.xml'
# This file should be identical to 'config.xml', but with the updated description
POST http://localhost:8080/view/MyView/config.xml
Authorization: Basic {{ token }}
Content-Type: application/xml

<hudson.model.ListView>
    <name>MyView</name>
    <description>This view contains all jobs related to the 'JenkinsQA' project. It includes both build and test jobs. The view is updated automatically whenever a new job is added to the 'JenkinsQA' project.</description>
    <filterExecutors>false</filterExecutors>
    <filterQueue>false</filterQueue>
    <properties class="hudson.model.View$PropertyList"/>
    <jobNames>
        <comparator class="hudson.util.CaseInsensitiveComparator"/>
        <string>MyJob</string>
        <string>NewJob3</string>
    </jobNames>
    <jobFilters/>
    <columns>
        <hudson.views.StatusColumn/>
        <hudson.views.WeatherColumn/>
        <hudson.views.JobColumn/>
        <hudson.views.LastSuccessColumn/>
        <hudson.views.LastFailureColumn/>
        <hudson.views.LastDurationColumn/>
        <hudson.views.BuildButtonColumn/>
    </columns>
    <recurse>false</recurse>
</hudson.model.ListView>

###

GET http://localhost:8080/api/json?pretty=true
Accept: application/json
Authorization: Basic {{ token }}

###
# Fetches the JSON representation of the first 10 jobs and views on the Jenkins server
GET http://localhost:8080/api/json?tree=jobs[name],views[name,jobs[name]]{0,10}
Accept: application/json
Authorization: Basic {{ token }}

###

GET http://localhost:8080/api/json?tree=jobs[name,description,lastCompletedBuild[result],lastBuild[duration],nextBuildNumber]
Accept: application/json
Authorization: Basic {{ token }}

###

GET http://localhost:8080/job/MyJob/api/json?tree=lastSuccessfulBuild[timestamp],lastFailedBuild[timestamp]
Authorization: Basic {{ token }}

###

GET http://localhost:8080/view/MyView/job/NewJob2/api/json?tree=lastBuild[result],name
Authorization: Basic {{ token }}


